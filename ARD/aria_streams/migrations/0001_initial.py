# Generated by Django 5.2.4 on 2025-08-01 11:11

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AriaSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=100, unique=True)),
                ('session_uid', models.UUIDField()),
                ('device_serial', models.CharField(max_length=50)),
                ('started_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('COMPLETED', 'Completed'), ('ERROR', 'Error')], default='ACTIVE', max_length=20)),
                ('metadata', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'db_table': 'aria_sessions',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='KafkaConsumerStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consumer_group', models.CharField(max_length=100)),
                ('topic', models.CharField(max_length=100)),
                ('partition', models.IntegerField()),
                ('last_offset', models.BigIntegerField()),
                ('last_processed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('PAUSED', 'Paused'), ('ERROR', 'Error')], default='ACTIVE', max_length=20)),
                ('error_message', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'kafka_consumer_status',
                'indexes': [models.Index(fields=['status', 'last_processed_at'], name='kafka_consu_status_4abfec_idx')],
                'unique_together': {('consumer_group', 'topic', 'partition')},
            },
        ),
        migrations.CreateModel(
            name='AnalyticsResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('analysis_type', models.CharField(max_length=50)),
                ('result_data', models.JSONField()),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('kafka_offset', models.BigIntegerField(blank=True, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics_results', to='aria_streams.ariasession')),
            ],
            options={
                'db_table': 'analytics_results',
                'indexes': [models.Index(fields=['session', 'analysis_type', 'timestamp'], name='analytics_r_session_cb1f05_idx'), models.Index(fields=['confidence_score'], name='analytics_r_confide_870c87_idx')],
            },
        ),
        migrations.CreateModel(
            name='EyeGazeData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('device_timestamp_ns', models.BigIntegerField()),
                ('gaze_type', models.CharField(choices=[('general', 'General'), ('personalized', 'Personalized')], max_length=20)),
                ('yaw', models.FloatField()),
                ('pitch', models.FloatField()),
                ('depth_m', models.FloatField(blank=True, null=True)),
                ('confidence', models.FloatField(blank=True, null=True)),
                ('kafka_offset', models.BigIntegerField(blank=True, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eye_gaze_data', to='aria_streams.ariasession')),
            ],
            options={
                'db_table': 'eye_gaze_data',
                'indexes': [models.Index(fields=['session', 'gaze_type', 'device_timestamp_ns'], name='eye_gaze_da_session_57559f_idx'), models.Index(fields=['timestamp'], name='eye_gaze_da_timesta_42e092_idx')],
            },
        ),
        migrations.CreateModel(
            name='HandTrackingData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('device_timestamp_ns', models.BigIntegerField()),
                ('left_hand_landmarks', models.JSONField(blank=True, null=True)),
                ('left_hand_wrist_normal', models.JSONField(blank=True, null=True)),
                ('left_hand_palm_normal', models.JSONField(blank=True, null=True)),
                ('right_hand_landmarks', models.JSONField(blank=True, null=True)),
                ('right_hand_wrist_normal', models.JSONField(blank=True, null=True)),
                ('right_hand_palm_normal', models.JSONField(blank=True, null=True)),
                ('kafka_offset', models.BigIntegerField(blank=True, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hand_tracking_data', to='aria_streams.ariasession')),
            ],
            options={
                'db_table': 'hand_tracking_data',
                'indexes': [models.Index(fields=['session', 'device_timestamp_ns'], name='hand_tracki_session_522763_idx'), models.Index(fields=['timestamp'], name='hand_tracki_timesta_0ffe31_idx')],
            },
        ),
        migrations.CreateModel(
            name='IMUData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('device_timestamp_ns', models.BigIntegerField()),
                ('imu_stream_id', models.CharField(max_length=20)),
                ('imu_type', models.CharField(choices=[('left', 'IMU Left'), ('right', 'IMU Right')], max_length=20)),
                ('accel_x', models.FloatField()),
                ('accel_y', models.FloatField()),
                ('accel_z', models.FloatField()),
                ('gyro_x', models.FloatField()),
                ('gyro_y', models.FloatField()),
                ('gyro_z', models.FloatField()),
                ('temperature_c', models.FloatField(blank=True, null=True)),
                ('kafka_offset', models.BigIntegerField(blank=True, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imu_data', to='aria_streams.ariasession')),
            ],
            options={
                'db_table': 'imu_data',
                'indexes': [models.Index(fields=['session', 'imu_type', 'device_timestamp_ns'], name='imu_data_session_c92ae0_idx'), models.Index(fields=['timestamp'], name='imu_data_timesta_d97ee0_idx'), models.Index(fields=['imu_stream_id'], name='imu_data_imu_str_88fbfd_idx')],
            },
        ),
        migrations.CreateModel(
            name='SLAMPointCloud',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('points', models.JSONField()),
                ('point_count', models.IntegerField()),
                ('kafka_offset', models.BigIntegerField(blank=True, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slam_point_clouds', to='aria_streams.ariasession')),
            ],
            options={
                'db_table': 'slam_point_clouds',
                'indexes': [models.Index(fields=['session', 'timestamp'], name='slam_point__session_1e2a15_idx'), models.Index(fields=['point_count'], name='slam_point__point_c_b51a7e_idx')],
            },
        ),
        migrations.CreateModel(
            name='SLAMTrajectoryData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('device_timestamp_ns', models.BigIntegerField()),
                ('transform_matrix', models.JSONField()),
                ('position_x', models.FloatField()),
                ('position_y', models.FloatField()),
                ('position_z', models.FloatField()),
                ('kafka_offset', models.BigIntegerField(blank=True, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slam_trajectory_data', to='aria_streams.ariasession')),
            ],
            options={
                'db_table': 'slam_trajectory_data',
                'indexes': [models.Index(fields=['session', 'device_timestamp_ns'], name='slam_trajec_session_b1d114_idx'), models.Index(fields=['timestamp'], name='slam_trajec_timesta_16f152_idx'), models.Index(fields=['position_x', 'position_y', 'position_z'], name='slam_trajec_positio_3e7b72_idx')],
            },
        ),
        migrations.CreateModel(
            name='VRSStream',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stream_id', models.CharField(max_length=20)),
                ('stream_name', models.CharField(max_length=50)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('device_timestamp_ns', models.BigIntegerField()),
                ('frame_index', models.IntegerField()),
                ('image_shape', models.JSONField()),
                ('pixel_format', models.CharField(max_length=20)),
                ('kafka_offset', models.BigIntegerField(blank=True, null=True)),
                ('image_data', models.TextField(blank=True, null=True)),
                ('image_width', models.IntegerField(blank=True, null=True)),
                ('image_height', models.IntegerField(blank=True, null=True)),
                ('original_size_bytes', models.BigIntegerField(blank=True, null=True)),
                ('compressed_size_bytes', models.BigIntegerField(blank=True, null=True)),
                ('compression_quality', models.IntegerField(blank=True, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vrs_streams', to='aria_streams.ariasession')),
            ],
            options={
                'db_table': 'vrs_streams',
                'indexes': [models.Index(fields=['session', 'stream_name', 'device_timestamp_ns'], name='vrs_streams_session_3fe07a_idx'), models.Index(fields=['timestamp'], name='vrs_streams_timesta_2c9288_idx')],
            },
        ),
    ]
